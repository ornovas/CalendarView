/*
 * Copyright (C) 2016 huanghaibin_dev <huanghaibin_dev@163.com>
 * WebSite https://github.com/MiracleTimes-Dev
 * Version 1.0.2
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
//apply plugin: 'maven-publish'
//afterEvaluate {
//    publishing {
//        def versionName = "3.7.1.43" // 当前版本依赖库版本号，这个jitpack不会使用到，只是我们开发者自己查看
//        publications {
//            // Creates a Maven publication called "release".
//            release(MavenPublication) {
//                // Applies the component for the release build variant.
////                from components.release // 表示发布 release（jitpack 都不会使用到）
////                from components.java
//                // You can then customize attributes of the publication as shown below.
//                groupId = 'com.haibin.calendarview' // 这个是依赖库的组 id
//                artifactId = 'calendarview' // 依赖库的名称（jitpack 都不会使用到）
//                version = versionName
//            }
//        }
////        repositories {
////            // 下面这部分，不是很清楚加不加，但是最后加上
////            maven {
////                // change URLs to point to your repos, e.g. http://my.org/repo
////                def baseUrl = buildDir.getParent()
////                def releasesRepoUrl = "$baseUrl/repos/releases"
////                def snapshotsRepoUrl = "$baseUrl/repos/snapshots"
////                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
////            }
////        }
//    }
//}

//生成文档注释
tasks.register('androidJavadocs', Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
}
//将文档打包成jar
tasks.register('androidJavadocsJar', Jar) {
    dependsOn androidJavadocs
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}
//将源码打包，这一点对kotlin来说很重要，否则业务侧无法看到源码
tasks.register('androidSourcesJar', Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}
configurations.maybeCreate("default")
def publishArtifact = artifacts.add("default", file('libs/oaid_sdk_1.0.30.aar'))

afterEvaluate{
    publishing {
        publications {
            myPublication(MavenPublication) {
                groupId 'com.haibin.calendarview'
                artifactId 'calendarview'
                version '1.0.0'             // Your package version
                artifact(androidSourcesJar)//将源码打包进aar，如果不需要可以去掉
                artifact(androidJavadocsJar)//将注释打包进aar，如果不需要可以去掉
                // 将aar推送到远程仓库
                artifact publishArtifact    //Example: *./target/myJavaClasses.jar*
            }
        }

        // Repositories *to* which Gradle can publish artifacts
//        repositories {
//            maven {
//                url uri('../local_maverepo')
//                credentials {
//                    username "default"
//                    password "default"
//                }
//            }
//        }
    }
}
